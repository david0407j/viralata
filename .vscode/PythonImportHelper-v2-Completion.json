[
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "pformat",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "jmespath",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jmespath",
        "description": "jmespath",
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "jmespath",
        "description": "jmespath",
        "isExtraImport": true,
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "viralata.cores.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "viralata.cores.models",
        "description": "viralata.cores.models",
        "detail": "viralata.cores.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "viralata.cores.models",
        "description": "viralata.cores.models",
        "isExtraImport": true,
        "detail": "viralata.cores.models",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "assert_contains",
        "importPath": "viralata.django_assertions",
        "description": "viralata.django_assertions",
        "isExtraImport": true,
        "detail": "viralata.django_assertions",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "IS_POPUP_VAR",
        "importPath": "django.contrib.admin.options",
        "description": "django.contrib.admin.options",
        "isExtraImport": true,
        "detail": "django.contrib.admin.options",
        "documentation": {}
    },
    {
        "label": "unquote",
        "importPath": "django.contrib.admin.utils",
        "description": "django.contrib.admin.utils",
        "isExtraImport": true,
        "detail": "django.contrib.admin.utils",
        "documentation": {}
    },
    {
        "label": "update_session_auth_hash",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "AdminPasswordChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "PermissionDenied",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "TemplateResponse",
        "importPath": "django.template.response",
        "description": "django.template.response",
        "isExtraImport": true,
        "detail": "django.template.response",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "escape",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "gettext",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "csrf_protect",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "sensitive_post_parameters",
        "importPath": "django.views.decorators.debug",
        "description": "django.views.decorators.debug",
        "isExtraImport": true,
        "detail": "django.views.decorators.debug",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "home",
        "importPath": "viralata.cores.views",
        "description": "viralata.cores.views",
        "isExtraImport": true,
        "detail": "viralata.cores.views",
        "documentation": {}
    },
    {
        "label": "home",
        "importPath": "viralata.cores.views",
        "description": "viralata.cores.views",
        "isExtraImport": true,
        "detail": "viralata.cores.views",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "partial",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "Csv",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "dj_database_url",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "sentry_sdk",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sentry_sdk",
        "description": "sentry_sdk",
        "detail": "sentry_sdk",
        "documentation": {}
    },
    {
        "label": "DjangoIntegration",
        "importPath": "sentry_sdk.integrations.django",
        "description": "sentry_sdk.integrations.django",
        "isExtraImport": true,
        "detail": "sentry_sdk.integrations.django",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".venv.bin.jp",
        "description": ".venv.bin.jp",
        "peekOfCode": "def main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('expression')\n    parser.add_argument('-f', '--filename',\n                        help=('The filename containing the input data.  '\n                              'If a filename is not given then data is '\n                              'read from stdin.'))\n    parser.add_argument('--ast', action='store_true',\n                        help=('Pretty print the AST, do not search the data.'))\n    args = parser.parse_args()",
        "detail": ".venv.bin.jp",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "viralata.cores.migrations.0001_initial",
        "description": "viralata.cores.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "viralata.cores.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "resp",
        "kind": 2,
        "importPath": "viralata.cores.tests.test_home",
        "description": "viralata.cores.tests.test_home",
        "peekOfCode": "def resp(\n    client,\n):\n    resp = client.get(reverse(\"cores:home\"))\n    return resp\ndef test_status_code(resp):\n    assert resp.status_code == 200\ndef test_title(resp):\n    assert_contains(resp, \"<title> ViraLata Intervenções Artísticas </title>\")\n\"\"\" ",
        "detail": "viralata.cores.tests.test_home",
        "documentation": {}
    },
    {
        "label": "test_status_code",
        "kind": 2,
        "importPath": "viralata.cores.tests.test_home",
        "description": "viralata.cores.tests.test_home",
        "peekOfCode": "def test_status_code(resp):\n    assert resp.status_code == 200\ndef test_title(resp):\n    assert_contains(resp, \"<title> ViraLata Intervenções Artísticas </title>\")\n\"\"\" \ndef test_home_link(resp):\n    assert_contains(resp, f'href=\"{reverse(\"base:home\")}\">Python Pro</a>')\ndef test_email_link(resp):\n    assert_contains(resp, 'href=\"mailto:ramalho@python.pro.br\"') \"\"\"",
        "detail": "viralata.cores.tests.test_home",
        "documentation": {}
    },
    {
        "label": "test_title",
        "kind": 2,
        "importPath": "viralata.cores.tests.test_home",
        "description": "viralata.cores.tests.test_home",
        "peekOfCode": "def test_title(resp):\n    assert_contains(resp, \"<title> ViraLata Intervenções Artísticas </title>\")\n\"\"\" \ndef test_home_link(resp):\n    assert_contains(resp, f'href=\"{reverse(\"base:home\")}\">Python Pro</a>')\ndef test_email_link(resp):\n    assert_contains(resp, 'href=\"mailto:ramalho@python.pro.br\"') \"\"\"",
        "detail": "viralata.cores.tests.test_home",
        "documentation": {}
    },
    {
        "label": "test_home_link",
        "kind": 2,
        "importPath": "viralata.cores.tests.test_home",
        "description": "viralata.cores.tests.test_home",
        "peekOfCode": "def test_home_link(resp):\n    assert_contains(resp, f'href=\"{reverse(\"base:home\")}\">Python Pro</a>')\ndef test_email_link(resp):\n    assert_contains(resp, 'href=\"mailto:ramalho@python.pro.br\"') \"\"\"",
        "detail": "viralata.cores.tests.test_home",
        "documentation": {}
    },
    {
        "label": "test_email_link",
        "kind": 2,
        "importPath": "viralata.cores.tests.test_home",
        "description": "viralata.cores.tests.test_home",
        "peekOfCode": "def test_email_link(resp):\n    assert_contains(resp, 'href=\"mailto:ramalho@python.pro.br\"') \"\"\"",
        "detail": "viralata.cores.tests.test_home",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "viralata.cores.admin",
        "description": "viralata.cores.admin",
        "peekOfCode": "class UserAdmin(admin.ModelAdmin):\n    add_form_template = \"admin/auth/user/add_form.html\"\n    change_user_password_template = None\n    fieldsets = (\n        (None, {\"fields\": (\"first_name\", \"email\", \"password\")}),\n        (\n            _(\"Permissions\"),\n            {\n                \"fields\": (\n                    \"is_active\",",
        "detail": "viralata.cores.admin",
        "documentation": {}
    },
    {
        "label": "csrf_protect_m",
        "kind": 5,
        "importPath": "viralata.cores.admin",
        "description": "viralata.cores.admin",
        "peekOfCode": "csrf_protect_m = method_decorator(csrf_protect)\nsensitive_post_parameters_m = method_decorator(sensitive_post_parameters())\n@admin.register(User)\nclass UserAdmin(admin.ModelAdmin):\n    add_form_template = \"admin/auth/user/add_form.html\"\n    change_user_password_template = None\n    fieldsets = (\n        (None, {\"fields\": (\"first_name\", \"email\", \"password\")}),\n        (\n            _(\"Permissions\"),",
        "detail": "viralata.cores.admin",
        "documentation": {}
    },
    {
        "label": "sensitive_post_parameters_m",
        "kind": 5,
        "importPath": "viralata.cores.admin",
        "description": "viralata.cores.admin",
        "peekOfCode": "sensitive_post_parameters_m = method_decorator(sensitive_post_parameters())\n@admin.register(User)\nclass UserAdmin(admin.ModelAdmin):\n    add_form_template = \"admin/auth/user/add_form.html\"\n    change_user_password_template = None\n    fieldsets = (\n        (None, {\"fields\": (\"first_name\", \"email\", \"password\")}),\n        (\n            _(\"Permissions\"),\n            {",
        "detail": "viralata.cores.admin",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "viralata.cores.models",
        "description": "viralata.cores.models",
        "peekOfCode": "class UserManager(BaseUserManager):\n    use_in_migrations = True\n    def _create_user(self, email, password, **extra_fields):\n        \"\"\"\n        Create and save a user with the given email, and password.\n        \"\"\"\n        if not email:\n            raise ValueError(\"The given email must be set\")\n        email = self.normalize_email(email)\n        user = self.model(email=email, **extra_fields)",
        "detail": "viralata.cores.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "viralata.cores.models",
        "description": "viralata.cores.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin):\n    \"\"\"\n    app base User class\n    Email and password are required. Other fields are optional.\n    \"\"\"\n    first_name = models.CharField(_(\"first name\"), max_length=150, blank=True)\n    email = models.EmailField(_(\"email address\"), unique=True)\n    is_staff = models.BooleanField(\n        _(\"staff status\"),\n        default=False,",
        "detail": "viralata.cores.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "viralata.cores.urls",
        "description": "viralata.cores.urls",
        "peekOfCode": "app_name = \"cores\"\nurlpatterns = [\n    path(\"\", home, name=\"home\"),\n]",
        "detail": "viralata.cores.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "viralata.cores.urls",
        "description": "viralata.cores.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", home, name=\"home\"),\n]",
        "detail": "viralata.cores.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "viralata.cores.views",
        "description": "viralata.cores.views",
        "peekOfCode": "def home(request):\n    return render(request, \"cores/home.html\")",
        "detail": "viralata.cores.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "viralata.asgi",
        "description": "viralata.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "viralata.asgi",
        "documentation": {}
    },
    {
        "label": "_test_case",
        "kind": 5,
        "importPath": "viralata.django_assertions",
        "description": "viralata.django_assertions",
        "peekOfCode": "_test_case = TestCase()\nassert_contains = _test_case.assertContains\nassert_not_contains = _test_case.assertNotContains",
        "detail": "viralata.django_assertions",
        "documentation": {}
    },
    {
        "label": "assert_contains",
        "kind": 5,
        "importPath": "viralata.django_assertions",
        "description": "viralata.django_assertions",
        "peekOfCode": "assert_contains = _test_case.assertContains\nassert_not_contains = _test_case.assertNotContains",
        "detail": "viralata.django_assertions",
        "documentation": {}
    },
    {
        "label": "assert_not_contains",
        "kind": 5,
        "importPath": "viralata.django_assertions",
        "description": "viralata.django_assertions",
        "peekOfCode": "assert_not_contains = _test_case.assertNotContains",
        "detail": "viralata.django_assertions",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = config(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = config(\"DEBUG\", cast=bool)\nALLOWED_HOSTS = config(\"ALLOWED_HOSTS\", cast=Csv())\nALLOWED_HOSTS = []\nAUTH_USER_MODEL = \"cores.User\"",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "SECRET_KEY = config(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = config(\"DEBUG\", cast=bool)\nALLOWED_HOSTS = config(\"ALLOWED_HOSTS\", cast=Csv())\nALLOWED_HOSTS = []\nAUTH_USER_MODEL = \"cores.User\"\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "DEBUG = config(\"DEBUG\", cast=bool)\nALLOWED_HOSTS = config(\"ALLOWED_HOSTS\", cast=Csv())\nALLOWED_HOSTS = []\nAUTH_USER_MODEL = \"cores.User\"\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "ALLOWED_HOSTS = config(\"ALLOWED_HOSTS\", cast=Csv())\nALLOWED_HOSTS = []\nAUTH_USER_MODEL = \"cores.User\"\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\nAUTH_USER_MODEL = \"cores.User\"\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"cores.User\"\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"collectfast\",",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"collectfast\",\n    \"viralata.cores\",\n]",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"viralata.urls\"",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "ROOT_URLCONF = \"viralata.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "WSGI_APPLICATION = \"viralata.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\ndefault_db_url = f\"sqlite:///{str(BASE_DIR / 'db.sqlite3')}\"\nparse_database = partial(dj_database_url.parse, conn_max_age=600)\nDATABASES = {\n    \"default\": config(\"DATABASE_URL\", default=default_db_url, cast=parse_database)\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "default_db_url",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "default_db_url = f\"sqlite:///{str(BASE_DIR / 'db.sqlite3')}\"\nparse_database = partial(dj_database_url.parse, conn_max_age=600)\nDATABASES = {\n    \"default\": config(\"DATABASE_URL\", default=default_db_url, cast=parse_database)\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "parse_database",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "parse_database = partial(dj_database_url.parse, conn_max_age=600)\nDATABASES = {\n    \"default\": config(\"DATABASE_URL\", default=default_db_url, cast=parse_database)\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": config(\"DATABASE_URL\", default=default_db_url, cast=parse_database)\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "LANGUAGE_CODE = \"pt-br\"\nTIME_ZONE = \"America/Sao_Paulo\"\nUSE_I18N = True\nUSE_TZ = True\n# configuração de ambiente de desenvolvimento\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"mediafiles\")\nAWS_ACCESS_KEY_ID = config(\"AWS_ACCESS_KEY_ID\", default=None)",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "TIME_ZONE = \"America/Sao_Paulo\"\nUSE_I18N = True\nUSE_TZ = True\n# configuração de ambiente de desenvolvimento\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"mediafiles\")\nAWS_ACCESS_KEY_ID = config(\"AWS_ACCESS_KEY_ID\", default=None)\nCOLLECTFAST_ENABLED = False",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# configuração de ambiente de desenvolvimento\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"mediafiles\")\nAWS_ACCESS_KEY_ID = config(\"AWS_ACCESS_KEY_ID\", default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "USE_TZ = True\n# configuração de ambiente de desenvolvimento\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"mediafiles\")\nAWS_ACCESS_KEY_ID = config(\"AWS_ACCESS_KEY_ID\", default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "STATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"mediafiles\")\nAWS_ACCESS_KEY_ID = config(\"AWS_ACCESS_KEY_ID\", default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config(\"AWS_SECRET_ACCESS_KEY\")",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"mediafiles\")\nAWS_ACCESS_KEY_ID = config(\"AWS_ACCESS_KEY_ID\", default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config(\"AWS_SECRET_ACCESS_KEY\")\n    AWS_STORAGE_BUCKET_NAME = config(\"AWS_STORAGE_BUCKET_NAME\")",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "MEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"mediafiles\")\nAWS_ACCESS_KEY_ID = config(\"AWS_ACCESS_KEY_ID\", default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config(\"AWS_SECRET_ACCESS_KEY\")\n    AWS_STORAGE_BUCKET_NAME = config(\"AWS_STORAGE_BUCKET_NAME\")\n    AWS_S3_OBJECT_PARAMETERS = {",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"mediafiles\")\nAWS_ACCESS_KEY_ID = config(\"AWS_ACCESS_KEY_ID\", default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config(\"AWS_SECRET_ACCESS_KEY\")\n    AWS_STORAGE_BUCKET_NAME = config(\"AWS_STORAGE_BUCKET_NAME\")\n    AWS_S3_OBJECT_PARAMETERS = {\n        \"CacheControl\": \"max-age=86400\",",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "AWS_ACCESS_KEY_ID",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "AWS_ACCESS_KEY_ID = config(\"AWS_ACCESS_KEY_ID\", default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config(\"AWS_SECRET_ACCESS_KEY\")\n    AWS_STORAGE_BUCKET_NAME = config(\"AWS_STORAGE_BUCKET_NAME\")\n    AWS_S3_OBJECT_PARAMETERS = {\n        \"CacheControl\": \"max-age=86400\",\n    }",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "COLLECTFAST_ENABLED",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "COLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config(\"AWS_SECRET_ACCESS_KEY\")\n    AWS_STORAGE_BUCKET_NAME = config(\"AWS_STORAGE_BUCKET_NAME\")\n    AWS_S3_OBJECT_PARAMETERS = {\n        \"CacheControl\": \"max-age=86400\",\n    }\n    AWS_PRELOAD_METADATA = True",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nSECURE_PROXY_SSL_HEADER = (\"HTTP_X_FORWARDED_PROTO\", \"https\")\nSENTRY_DSN = config(\"SENTRY_DSN\", default=None)\nif SENTRY_DSN:\n    sentry_sdk.init(dsn=SENTRY_DSN, integrations=[DjangoIntegration()])",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "SECURE_PROXY_SSL_HEADER",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "SECURE_PROXY_SSL_HEADER = (\"HTTP_X_FORWARDED_PROTO\", \"https\")\nSENTRY_DSN = config(\"SENTRY_DSN\", default=None)\nif SENTRY_DSN:\n    sentry_sdk.init(dsn=SENTRY_DSN, integrations=[DjangoIntegration()])",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "SENTRY_DSN",
        "kind": 5,
        "importPath": "viralata.settings",
        "description": "viralata.settings",
        "peekOfCode": "SENTRY_DSN = config(\"SENTRY_DSN\", default=None)\nif SENTRY_DSN:\n    sentry_sdk.init(dsn=SENTRY_DSN, integrations=[DjangoIntegration()])",
        "detail": "viralata.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "viralata.urls",
        "description": "viralata.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"\", home),\n]",
        "detail": "viralata.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "viralata.wsgi",
        "description": "viralata.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "viralata.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'viralata.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]