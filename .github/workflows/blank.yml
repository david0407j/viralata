name: CI

on:
  push:
    branches:
      - cores
  pull_request:
    branches:
      - cores

jobs:
  build:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: davidson
          POSTGRES_PASSWORD: davidson
          POSTGRES_DB: postgres
        ports:
          - '5432:5432'

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar cache de dependências
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
          architecture: x64

      - name: Criar .env manualmente
        run: |
          echo "POSTGRES_USER=davidson" >> .env
          echo "POSTGRES_PASSWORD=davidson" >> .env
          echo "POSTGRES_DB=postgres" >> .env
          echo "CSRF_TRUSTED_ORIGINS=['http://localhost', 'http://127.0.0.1']" >> .env
          echo "SECRET_KEY=supersecreta12345" >> .env
          echo "DEBUG=True" >> .env
          echo "ALLOWED_HOSTS=localhost,127.0.0.1" >> .env

      - name: Instalar dependências
        run: |
          pip install poetry
          poetry install

      - name: Preparar banco de dados
        run: |
          poetry run python manage.py migrate

      - name: Rodar flake8
        run: |
          poetry run flake8

      - name: Executar testes
        run: |
          poetry run pytest

